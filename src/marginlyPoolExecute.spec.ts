import { expect } from 'chai';
import { BigNumber } from 'ethers';
import { getCalldata, getDepositBaseAndLongArgs, getDepositQuoteAndShortArgs } from './marginlyPoolExecute';
import { ZERO } from './consts';

describe('Test calldata generation', () => {
  it('Deposit 0.01 base and long with leverage=5 calldata', async () => {
    const actual = getCalldata(
      getDepositBaseAndLongArgs(
        BigNumber.from(10000000000000000n),
        BigNumber.from(40000000000000000n),
        BigNumber.from(271120914108209073041n),
        ZERO,
        false
      )
    ).calldata;
    expect(actual).to.eq(
      '0xb07a65700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002386f26fc10000000000000000000000000000000000000000000000000000008e1bc9bf04000000000000000000000000000000000000000000000000000eb28efaebd6fe8b91000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
    );
  });

  it('Deposit 1 quote and short with leverage=10 calldata', async () => {
    const actual = getCalldata(
      getDepositQuoteAndShortArgs(
        BigNumber.from(1000000n),
        BigNumber.from(2675358126416699n),
        BigNumber.from(253048174954174419377n),
        ZERO,
        false
      )
    ).calldata;
    const expected =
      '0xb07a6570000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000000000000000000000000000000981395ac5a33b00000000000000000000000000000000000000000000000db7bfb66a047711b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000';
    expect(actual).to.eq(expected);
  });
});
